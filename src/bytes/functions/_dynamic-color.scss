/// Brightness of color getter
/// @author Azin Asili
/// @access private
/// @param {color} $color - Color to be analyzed
/// @return {number} Color brightness level
@function _brightness($color) {
  @return ((red($color)) + (green($color)) + (blue($color))) / 255 * 100%;
}

/// Compare color brightness and return new color
/// @author Azin Asili
/// @access public
/// @param {color} $color - Color to base output on
/// @require {function} tint - Mixes a color with white to create a new lighter color
/// @require {function} shade - Mixes a color with black to create a new darker color
/// @require {function} _brightness - Brightness of color getter
/// @return {color} New color based on inputed value
/// @example scss
///   .foo {
///     color: dynamic-color(#bada55);
///   }
/// @example css
///   .foo {
///     color: #4a5722;
///   }
@function dynamic-color($color) {
  @if $color == null {
    @return null;
  } @else {
    $color-light: tint($color, 80%);
    $color-dark: shade($color, 60%);
    $color-brightness: _brightness($color);
    $light-text-brightness: _brightness($color-light);
    $dark-text-brightness: _brightness($color-dark);
    @if abs($color-brightness - $light-text-brightness) > abs($color-brightness - $dark-text-brightness) {
      @return $color-light;
    } @else {
      @return $color-dark;
    }
  }
}
