/// Iterate value(s) and convert to rem
///
/// @access public
///
/// @param {number (with unit) | list} $values
///   Value(s) to convert to rem
///
/// @param {number (with unit)} $base [_get-setting($bytes, 'font-size')]
///   Base context for calculation
///
/// @return {list}
///
/// @example scss
///   .foo {
///     padding: rem(10px 20px);
///   }
///
/// @example css
///   .foo {
///     padding: .625rem 1.25rem;
///   }
///
/// @require {function} _get-setting
///
/// @require {function} _convert-px
@function rem($values, $base: _get-setting($bytes, 'font-size')) {
  $_rem-values: ();

  // Decide how to handle each value
  @each $value in $values {
    @if type-of($value) != number or unit($value) != 'px' or index((0, 1, -1), $value) {
      $_rem-values: append($_rem-values, $value);
    } @else {
      $_rem-value: _convert-px($value, $base) * 1rem;
      $_rem-values: append($_rem-values, $_rem-value);
    }
  }

  @if length($values) == 1 {
    @return nth($_rem-values, 1);
  }

  @return $_rem-values;
}
