/// Default animation for transitions
///
/// @access public
///
/// @param {string | property} $property ['all']
///   Property to transition
///
/// @param {number (with unit)} $duration [_get-setting($bytes, 'animate-timing')]
///   Length of transition
///
/// @param {string | function} $easing [_get-setting($bytes, 'animate-easing')]
///   Easing function for transition
///
/// @param {number (with unit)} $delay [null]
///   Transition delay
///
/// @return {value}
///
/// @example scss
///   .foo {
///     transition: animate(background);
///   }
///
/// @example css
///   .foo {
///     transition: background .4s cubic-bezier(.4, 0, .2, 1);
///   }
///
/// @throw Warning when `$duration` or `$delay` does not have a unit
///
/// @require {function} _get-setting
@function animate(
  $property : 'all',
  $duration : _get-setting($bytes, 'animate-timing'),
  $easing   : _get-setting($bytes, 'animate-easing'),
  $delay    : null
) {
  @if unitless($duration) {
    @warn '`#{$duration}` should have a timing unit in `animate()`';
  }

  @if $delay and unitless($delay) {
    @warn '`#{$delay}` should have a timing unit in `animate()`';
  }

  @return unquote($property) $duration unquote($easing) $delay;
}
