/// Default animation for transitions
/// @author Azin Asili
/// @access public
/// @param {property} $property [all] - Property to transition
/// @param {number} $duration [get($bytes, 'animate-timing')] - Length of transition
/// @param {string | function} $easing [get($bytes, 'animate-easing')] - Easing function for transition
/// @param {number} $delay [null] - Transition delay
/// @require {function} get - Return key value from a map
/// @throw Warning when $duration or $delay does not have a unit
/// @return {value} Values to transition
/// @example scss
///   .foo {
///     transition: animate(background);
///   }
/// @example css
///   .foo {
///     transition: background .4s cubic-bezier(.4, 0, .2, 1);
///   }
@function animate(
  $property : all,
  $duration : get($bytes, 'animate-timing'),
  $easing   : get($bytes, 'animate-easing'),
  $delay    : null
) {
  @if unitless($duration) {
    @warn '`#{$duration}` should have a timing unit in `animate()`';
  }

  @if $delay != null and unitless($delay) {
    @warn '`#{$delay}` should have a timing unit in `animate()`';
  }

  @return $property $duration unquote($easing) $delay;
}
