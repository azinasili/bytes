/// Return brightness of color
///
/// @access private
///
/// @param {color} $color
///   Color to be analyzed
///
/// @return {number}
@function _brightness($color) {
  $_red   : red($color);
  $_green : green($color);
  $_blue  : blue($color);

  @return ($_red + $_green + $_blue) / (255 * 100);
}

/// Return new color based on lightness of color
///
/// @access public
///
/// @param {color} $color
///   Color to analyze
///
/// @return {color}
///
/// @example scss
///   .foo {
///     color: dynamic-color(#bada55);
///   }
///
/// @example css
///   .foo {
///     color: #4a5722;
///   }
///
/// @require {function} _brightness
///
/// @require {function} chroma
@function dynamic-color($color) {
  $_color-light           : chroma($color, 80%);
  $_color-dark            : chroma($color, -60%);
  $_color-brightness      : _brightness($color);
  $_light-text-brightness : _brightness($_color-light);
  $_dark-text-brightness  : _brightness($_color-dark);
  $_light-bg-brightness   : abs($_color-brightness - $_light-text-brightness);
  $_dark-bg-brightness    : abs($_color-brightness - $_dark-text-brightness);

  @if $_light-bg-brightness > $_dark-bg-brightness {
    @return $_color-light;
  }

  @return $_color-dark;
}
