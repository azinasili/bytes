/// Convert property and px value(s) to rem
/// @author Azin Asili
/// @access public
/// @param {property} $property - Property to convert value(s)
/// @param {number} $values - Value(s) to convert from px to rem
/// @param {number} $base [get($bytes, 'font-size')] - rem context
/// @require {function} rem - Iterate value(s) and convert to rem
/// @require {function} get - Return key value from a map
/// @require {function} _b-strip-unit - Strip unit from number
/// @output Property and converted rem value(s)
/// @example scss
///   .foo {
///     @include rem(margin, 10px auto);
///     @include rem(padding, 10px);
///   }
/// @example css
///   .foo {
///     margin: .625rem auto;
///     padding: .625rem;
///   }
@mixin rem($property, $values, $base: get($bytes, 'font-size')) {
  $font-size: _b-strip-unit($base);
  $rem-values: ();

  // Loop through $values list
  // Calculate rem value on each item
  @each $value in $values {
    $rem-values: join($rem-values, rem($value, $base));
  }

  // Output rem values
  #{$property}: $rem-values;
}
