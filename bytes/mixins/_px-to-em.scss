/// Convert property and px value(s) into em
/// @author Azin Asili
/// @access public
/// @param {property} $property - Property to convert value(s)
/// @param {number} $values - Value(s) to convert from px to em
/// @param {number} $base [get($bytes, 'font-size')] - em context
/// @require {function} em - Iterate value(s) and convert to em
/// @require {function} get - Return key value from a map
/// @require {function} _b-strip-unit - Strip unit from number
/// @output Property and converted em value(s)
/// @example scss
///   .foo {
//      @include em(margin, 10px auto);
///     @include em(padding, 10px);
///   }
/// @example css
///   .foo {
///     margin: .625em auto;
///     padding: .625em;
///   }
@mixin em($property, $values, $base: get($bytes, 'font-size')) {
  $font-size: _b-strip-unit($base);
  $em-values: ();

  // Loop through $values list
  // Calculate em value on each item
  @each $value in $values {
    $em-values: join($em-values, em($value, $base));
  }

  // Output em values
  #{$property}: $em-values;
}
