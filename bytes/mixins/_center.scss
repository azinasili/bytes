/// Center element on X or Y axis
/// @author Azin Asili
/// @access public
/// @param {string} $direction - Set alignment context to element
/// @param {string} $position [relative] - Set position value to element
/// @throw Warning when `$direction` or `$position` is not an accepted value
/// @output Centered element based on alignment
/// @example scss
///   .foo {
///     @include center(horz, absolute);
///   }
/// @example css
///   .foo {
///     left: 50%;
///     transform: translateX(-50%);
///     position: absolute;
///   }
@mixin center($direction, $position: relative) {
  $horizontal: ('horizontal', 'horz', 'h');
  $vertical: ('vertical', 'vert', 'v');
  $directions: join(($horizontal, $vertical), ('both'));
  $positions: ('relative', 'absolute', 'fixed');

  @if not index($positions, $position) {
    @error '`#{$direction}` is not a valid argument for `center()`, please use one of the following: #{$directions}';
  }

  @if not index($positions, $position) {
    @warn '`#{$position}` is not a valid argument for `center()`, please use one of the following: #{$positions}';
  }

  position: $position;

  @if index($horizontal, $direction) {
    left: 50%;
    transform: translate3d(-50%, 0, 0);
  } @else if index($vertical, $direction) {
    top: 50%;
    transform: translate3d(0, -50%, 0);
  } @else {
    left: 50%;
    top: 50%;
    transform: translate3d(-50%, -50%, 0);
  }
}
