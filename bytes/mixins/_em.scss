/// Convert property and px value(s) to em
///
/// @access public
///
/// @param {string | property} $property
///   Property to convert value(s)
///
/// @param {number (with unit)} $values
///   Value(s) to convert to em
///
/// @param {number (with unit)} $base [_get-setting($bytes, 'font-size')]
///   Base context for calculation
///
/// @param {boolean | string} $is-important
///   Add important flag to declaration
///
/// @example scss
///   .foo {
///     @include em(margin, 10px auto);
///     @include em(padding, 10px);
///   }
///
/// @example css
///   .foo {
///     margin: .625em auto;
///     padding: .625em;
///   }
///
/// @require {function} _get-setting
///
/// @require {function} _is-important
///
/// @require {function} em
@mixin em(
  $property,
  $values,
  $base: _get-setting($bytes, 'font-size'),
  $is-important: null
) {
  $_important: null;

  @if _is-important($is-important) {
    $_important: !important;
  }

  #{$property}: em($values, $base) !important;
}
