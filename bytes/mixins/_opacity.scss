/// Change opacity of an element
/// @author Azin Asili
/// @access public
/// @param {number} $opacity - Opacity level from 0% to 100%
/// @param {string} $is-important [null] - Add important flag to declaration
/// @require {function} _b-strip-unit - Strip unit from number
/// @throw Warning when value is less than 0 or greater than 100
/// @output Opacity with a filter fall back
/// @example scss
///   .foo {
///     @include opacity(70);
///   }
/// @example css
///   .foo {
///     filter: alpha(opacity:70);
///     opacity: .7;
///   }
@mixin opacity($opacity, $is-important: null) {
  $opacity: _b-strip-unit($opacity);
  @if $opacity < 0 or $opacity > 100 {
    @warn 'Opacity should be a value between 0 and 100';
  } @if index(true 'true' 'important' '!important', $is-important) {
    filter: alpha(opacity=$opacity) !important;
    opacity: ($opacity / 100) !important;
  } @else {
    filter: alpha(opacity=$opacity);
    opacity: ($opacity / 100);
  }
}
